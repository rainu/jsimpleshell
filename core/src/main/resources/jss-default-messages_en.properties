command.description.runscript=Reads commands from file
command.name.runscript=run-script
command.abbrev.runscript=rs
command.header.runscript=

param.name.runscript=filename
param.description.runscript=Full file name of the script

param.name.runscript.1=script-argument
param.description.runscript.1=Arguments for the script in form of: <argName>=<argValue>

command.description.listscriptarguments=Look into the given script an list all included arguments
command.name.listscriptarguments=list-script-arguments
command.abbrev.listscriptarguments=lsa
command.header.listscriptarguments=

param.name.listscriptarguments=filename
param.description.listscriptarguments=Full file name of the script

command.description.enablelogging=Sets up logging, which duplicates all subsequent output in a file
command.name.enablelogging=enable-logging
command.abbrev.enablelogging=el
command.header.enablelogging=

param.name.enablelogging=filename
param.description.enablelogging=Name of the logfile

command.description.disablelogging=Turns off logging
command.name.disablelogging=disable-logging
command.abbrev.disablelogging=dl
command.header.disablelogging=

command.description.listall=List all commands
command.name.listall=list-all
command.abbrev.listall=la
command.header.listall=abbrev\tname\tparams

command.description.list=List all commands with no prefix
command.name.list=list
command.abbrev.list=l
command.header.list=abbrev\tname\tparams

command.description.generatehelp=Generates an HTML file with command descriptions.\n(Similar to output of ?list, but in HTML format).
command.name.generatehelp=generate-HTML-help
command.abbrev.generatehelp=ghh
command.header.generatehelp=

param.name.generatehelp=filename
param.description.generatehelp=Path to the file to save the table to.

param.name.generatehelp.1=include-prefixed
param.description.generatehelp.1=Whether to include commands with prefix (usually system or advanced functionality).

command.description.liststartwith=List all available commands starting with given string
command.name.liststartwith=list
command.abbrev.liststartwith=l
command.header.liststartwith=abbrev\tname\tparams

param.name.liststartwith=startsWith
param.description.liststartwith=Pattern to show commands starting with

command.description.help=Show info on using the UI
command.name.help=help
command.abbrev.help=h
command.header.help=

command.description.helpdetail=Show detailed info on all commands with given name
command.name.helpdetail=help
command.abbrev.helpdetail=h
command.header.helpdetail=

param.name.helpdetail=command-name
param.description.helpdetail=Command name you want help on

command.description.lastexception=Returns last thrown exception
command.name.lastexception=get-last-exception
command.abbrev.lastexception=gle
command.header.lastexception=

command.description.displaytime=Turns command execution time display on and off
command.name.displaytime=set-display-time
command.abbrev.displaytime=sdt
command.header.displaytime=

param.name.displaytime=do-display-time
param.description.displaytime=true if do display, false otherwise

command.description.exit=Exit the current shell.
command.name.exit=exit
command.abbrev.exit=exit
command.header.exit=

command.description.startrecord=Start recording a macro.
command.name.startrecord=start-record
command.abbrev.startrecord=sr
command.header.startrecord=

param.name.startrecord=macroName
param.description.startrecord=The name of the macro.

command.description.stoprecord=Stop the current recording macro.
command.name.stoprecord=stop-record
command.abbrev.stoprecord=str
command.header.stoprecord=

command.description.setmacrohome=Set the home directory of macros.
command.name.setmacrohome=set-macro-home
command.abbrev.setmacrohome=smh
command.header.setmacrohome=

param.name.setmacrohome=path
param.description.setmacrohome=The path to the directory.

command.description.getmacrohome=Get the home directory of macros.
command.name.getmacrohome=get-macro-home
command.abbrev.getmacrohome=gmh
command.header.getmacrohome=

command.description.runmacro=Read commands from a macro.
command.name.runmacro=run-macro
command.abbrev.runmacro=rm
command.header.runmacro=

param.name.runmacro=macroName
param.description.runmacro=The name of the macro.

command.description.changelocale=Set the locale.
command.name.changelocale=change-locale
command.abbrev.changelocale=cl
command.header.changelocale=

param.name.changelocale=locale
param.description.changelocale=The locale

command.description.variable.local=Set the value of a local variable.
command.name.variable.local=lvar
command.abbrev.variable.local=var
command.header.variable.local=

param.name.variable.local=name
param.description.variable.local=The name of the variable.

param.name.variable.local.1=value
param.description.variable.local.1=The value of the variable.

command.description.variable.global=Set the value of a global variable.
command.name.variable.global=gvar
command.abbrev.variable.global=gvar
command.header.variable.global=

param.name.variable.global=name
param.description.variable.global=The name of the variable.

param.name.variable.global.1=value
param.description.variable.global.1=The value of the variable.

command.description.variable.remove=Removes a variable from the current environment.
command.name.variable.remove=rm-var
command.abbrev.variable.remove=rmv
command.header.variable.remove=

param.name.variable.remove=name
param.description.variable.remove=The name of the variable.

command.description.showenv=Lists all available variables and their values.
command.name.showenv=show-environment
command.abbrev.showenv=senv
command.header.showenv=

command.description.showvar=Shows more details about a variable.
command.name.showvar=show-variable
command.abbrev.showvar=svar
command.header.showvar=

param.name.showvar=name
param.description.showvar=The name of the variable.

command.description.execution=Run and control a new external subprocess.
command.name.execution=execute
command.abbrev.execution=exec
command.header.execution=

param.name.execution=command
param.description.execution=The command to call.

param.name.execution.1=arguments
param.description.execution.1=The commands arguments.

command.description.execution.build=Run and control a new external subprocess.
command.name.execution.build=execute
command.abbrev.execution.build=exec
command.header.execution.build=Now you can configure the process.

command.description.execution.build.command=Set the command that should be executed.
command.name.execution.build.command=set-command
command.abbrev.execution.build.command=sc
command.header.execution.build.command=

command.description.execution.build.argument=Set the arguments of that command.
command.name.execution.build.argument=set-arguments
command.abbrev.execution.build.argument=sa
command.header.execution.build.argument=

command.description.execution.build.environment=Adds a variable to the process environment.
command.name.execution.build.environment=set-environment
command.abbrev.execution.build.environment=se
command.header.execution.build.environment=

param.name.execution.environment=name
param.description.execution.environment=The name of the variable.

param.name.execution.environment.1=value
param.description.execution.environment.1=The value of the variable.

command.description.execution.build.environment.remove=Removes a variable from the process environment.
command.name.execution.build.environment.remove=remove-environment
command.abbrev.execution.build.environment.remove=re
command.header.execution.build.environment.remove=

param.name.execution.environment.remove=name
param.description.execution.environment.remove=The name of the variable.

command.description.execution.build.home=Set the working directory for the process.
command.name.execution.build.home=set-home
command.abbrev.execution.build.home=sh
command.header.execution.build.home=

param.name.execution.home=path
param.description.execution.home=The path to the working directory.

command.description.execution.build.show=Shows the current build state.
command.name.execution.build.show=show
command.abbrev.execution.build.show=s
command.header.execution.build.show=

command.description.execution.build.disable.out=Don't display the process output.
command.name.execution.build.disable.out=disable-output
command.abbrev.execution.build.disable.out=do
command.header.execution.build.disable.out=

command.description.execution.build.enable.out=Display the process output.
command.name.execution.build.enable.out=enable-output
command.abbrev.execution.build.enable.out=eo
command.header.execution.build.enable.out=

command.description.execution.build.disable.err=Don't display the process error.
command.name.execution.build.disable.err=disable-error
command.abbrev.execution.build.disable.err=de
command.header.execution.build.disable.err=

command.description.execution.build.enable.err=Display the process error.
command.name.execution.build.enable.err=enable-error
command.abbrev.execution.build.enable.err=ee
command.header.execution.build.enable.err=

command.description.execution.build.cancel=Cancel the current build session. The process will not be started!
command.name.execution.build.cancel=cancel
command.abbrev.execution.build.cancel=c
command.header.execution.build.cancel=

command.description.execution.build.run=Run the process.
command.name.execution.build.run=run
command.abbrev.execution.build.run=r
command.header.execution.build.run=

command.name.loop.count=for
command.description.loop.count=Starts a counting loop.
command.abbrev.loop.count=for
command.header.loop.count=

param.name.loop.count=from
param.description.loop.count=The start value of the counting loop.

param.name.loop.count.1=until
param.description.loop.count.1=The until value of the counting loop.

param.name.loop.count.2=step
param.description.loop.count.2=The step value of the counting loop.

command.name.loop.each=foreach
command.description.loop.each=Starts a foreach loop.
command.abbrev.loop.each=fore
command.header.loop.each=

param.name.loop.each=items
param.description.loop.each=All elements for that loop.

command.name.loop.end=for-end
command.description.loop.end=Terminates the current loop.
command.abbrev.loop.end=fe
command.header.loop.end=

command.name.echo.builder=echo-build
command.description.echo.builder=Starts the build process for an echo.
command.abbrev.echo.builder=eb
command.header.echo.builder=

command.name.echo=echo
command.description.echo=Display the given text.
command.abbrev.echo=e
command.header.echo=

command.name.echo.error.builder=echo-error-build
command.description.echo.error.builder=Starts the build process for an echo that print the text at the error output.
command.abbrev.echo.error.builder=eeb
command.header.echo.error.builder=

command.name.echo.error=echo-error
command.description.echo.error=Print the given text at the error output.
command.abbrev.echo.error=ee
command.header.echo.error=

command.name.echo.builder.normal=normal
command.description.echo.builder.normal=Print the text normal.
command.abbrev.echo.builder.normal=n
command.header.echo.builder.normal=

command.name.echo.builder.black=black
command.description.echo.builder.black=Print the text in black.
command.abbrev.echo.builder.black=d
command.header.echo.builder.black=

command.name.echo.builder.red=red
command.description.echo.builder.red=Print the text in red.
command.abbrev.echo.builder.red=r
command.header.echo.builder.red=

command.name.echo.builder.green=green
command.description.echo.builder.green=Print the text in green.
command.abbrev.echo.builder.green=g
command.header.echo.builder.green=

command.name.echo.builder.yellow=yellow
command.description.echo.builder.yellow=Print the text in yellow.
command.abbrev.echo.builder.yellow=y
command.header.echo.builder.yellow=

command.name.echo.builder.blue=blue
command.description.echo.builder.blue=Print the text in blue.
command.abbrev.echo.builder.blue=b
command.header.echo.builder.blue=

command.name.echo.builder.magenta=magenta
command.description.echo.builder.magenta=Print the text in magenta.
command.abbrev.echo.builder.magenta=m
command.header.echo.builder.magenta=

command.name.echo.builder.cyan=cyan
command.description.echo.builder.cyan=Print the text in cyan.
command.abbrev.echo.builder.cyan=c
command.header.echo.builder.cyan=

command.name.echo.builder.white=white
command.description.echo.builder.white=Print the text in white.
command.abbrev.echo.builder.white=w
command.header.echo.builder.white=

command.name.echo.builder.black.bg=black-background
command.description.echo.builder.black.bg=Print the text with black colored background.
command.abbrev.echo.builder.black.bg=db
command.header.echo.builder.black.bg=

command.name.echo.builder.red.bg=red-background
command.description.echo.builder.red.bg=Print the text with red colored background.
command.abbrev.echo.builder.red.bg=rb
command.header.echo.builder.red.bg=

command.name.echo.builder.green.bg=green-background
command.description.echo.builder.green.bg=Print the text with green colored background.
command.abbrev.echo.builder.green.bg=gb
command.header.echo.builder.green.bg=

command.name.echo.builder.yellow.bg=yellow-background
command.description.echo.builder.yellow.bg=Print the text with yellow colored background.
command.abbrev.echo.builder.yellow.bg=yb
command.header.echo.builder.yellow.bg=

command.name.echo.builder.blue.bg=blue-background
command.description.echo.builder.blue.bg=Print the text with blue colored background.
command.abbrev.echo.builder.blue.bg=bb
command.header.echo.builder.blue.bg=

command.name.echo.builder.magenta.bg=magenta-background
command.description.echo.builder.magenta.bg=Print the text with magenta colored background.
command.abbrev.echo.builder.magenta.bg=mb
command.header.echo.builder.magenta.bg=

command.name.echo.builder.cyan.bg=cyan-background
command.description.echo.builder.cyan.bg=Print the text with cyan colored background.
command.abbrev.echo.builder.cyan.bg=cb
command.header.echo.builder.cyan.bg=

command.name.echo.builder.white.bg=white-background
command.description.echo.builder.white.bg=Print the text with white colored background.
command.abbrev.echo.builder.white.bg=wb
command.header.echo.builder.white.bg=

command.name.echo.builder.show=show
command.description.echo.builder.show=Show the current state.
command.abbrev.echo.builder.show=s
command.header.echo.builder.show=

command.name.echo.builder.clear=clear
command.description.echo.builder.clear=Clear the current state.
command.abbrev.echo.builder.clear=clear
command.header.echo.builder.clear=

command.name.echo.builder.exit=complete
command.description.echo.builder.exit=Completes the build process.
command.abbrev.echo.builder.exit=exit
command.header.echo.builder.exit=

param.name.echo=value
param.description.echo=The printed values.

message.help.logo.big=\
###########################################|\n\
#     _____  ______  __                       __           ______  __                __ __  \n\
#    |     \\/      \\|  \\                     |  \\         /      \\|  \\     Rainu    |  |  \\ \n\
#     \\$$$$|  $$$$$$|$$|______ ____   ______ | $$ ______ |  $$$$$$| $$____   ______ | $| $$ \n\
#       | $| $$___\\$|  |      \\    \\ /      \\| $$/      \\| $$___\\$| $$    \\ /      \\| $| $$ \n\
#  __   | $$\\$$    \\| $| $$$$$$\\$$$$|  $$$$$$| $|  $$$$$$\\\\$$    \\| $$$$$$$|  $$$$$$| $| $$ \n\
# |  \\  | $$_\\$$$$$$| $| $$ | $$ | $| $$  | $| $| $$    $$_\\$$$$$$| $$  | $| $$    $| $| $$ \n\
# | $$__| $|  \\__| $| $| $$ | $$ | $| $$__/ $| $| $$$$$$$|  \\__| $| $$  | $| $$$$$$$| $| $$ \n\
#  \\$$    $$\\$$    $| $| $$ | $$ | $| $$    $| $$\\$$     \\\\$$    $| $$  | $$\\$$     | $| $$ \n\
#   \\$$$$$$  \\$$$$$$ \\$$\\$$  \\$$  \\$| $$$$$$$ \\$$ \\$$$$$$$ \\$$$$$$ \\$$   \\$$ \\$$$$$$$\\$$\\$$ \n\
#                                   | $$ \n\
#                                   | $$   {project.homepage} \n\
#                                    \\$$        Version:  {project.version} \n\
#\n\
# Based on Cliche ( {cliche.homepage} )\n\
# and uses JLine2 ( {jline2.homepage} )\n\
###########################################|\n\n

message.help.logo.small=\
########################|\n\
#     _____     ______      ______   \n\
#    |     \\   /      \\    /      \\  \n\
#     \\$$$$$  |  $$$$$$\\  |  $$$$$$\\ \n\
#       | $$  | $$___\\$$  | $$___\\$$ \n\
#  __   | $$   \\$$    \\    \\$$    \\  \n\
# |  \\  | $$   _\\$$$$$$\\   _\\$$$$$$\\ \n\
# | $$__| $$  |  \\__| $$  |  \\__| $$ \n\
#  \\$$    $$   \\$$    $$   \\$$    $$ \n\
#   \\$$$$$$     \\$$$$$$     \\$$$$$$  \n\
#\n\
# JSimpleShell - {project.homepage} \n\
# Autor: Rainu\n\
# Version:  {project.version} \n\
#\n\
# Based on Cliche ( {cliche.homepage} )\n\
# and uses JLine2 ( {jline2.homepage} )\n\
########################|\n\n
message.help.logo.tiny=JSimpleShell - {project.homepage}\n\n

message.help.usage=Usage:\n\
* You can use "?list" to show available commands. The command "?list-all" lists also the special commands.\n\
* If you want to know more about a specific command, you can use the "?help" followed by the command name. For example:\n\
\t$> ?help !run-script\n\
* You can also use the arrow-keys!\n\
\t<LEFT_ARROW> and <RIGHT_ARROW> navigates in current line\n\
\t<UP_ARROW> and <DOWN_ARROW> navigates through the command history\n\
* Use <CTRL> + <R> to search in command history\n\
* Use <CTRL> + <L> to clear the terminal\n\
* Use <TAB> to auto-complete the available commands or parameters (after beginning --)\n\
* You can also define your own input order of parameter values. For example:\n\
\t$> !generate-HTML-help --include-prefixed true --file-name help.html\n\
\
* To exit this shell or any subshell, use "exit"

message.general.command=Command
message.general.abbrev=Abbrev
message.general.params=Params
message.general.description=Description
message.general.none=none
message.general.numberofparameters=Number of parameters
message.general.command.varargs=This command is varargs on its last parameter.
message.general.command.noparam=No parameters.
message.general.locale.changed=The locale was changed.
message.general.locale.notsupported=The given locale is not supported.

message.macro.record.alreadystarted=Macro recording is already started!
message.macro.record.start=Start macro recording.
message.macro.record.notstarted=No macro is recording.
message.macro.record.stop=Macro recording stopped.
message.macro.sethome.nodirectory=The given path doesn't point to an existing directory.
message.macro.record.head=\
################\n\
#This file represents a macro for the JSimpleShell.\n\
#################\n\n

message.showvar.details=Name: {name}\nType: {type}\nValue type: {value-type}\nValue: {value}
message.showvar.global=global
message.showvar.local=local

message.execution.prompt=configure-process
message.execution.show=Command line: {cmd} {args}\nEnvironment:\n{env}\nWorking directory: {dir}\nDefault-Output: {output}\nError-Output: {error}
message.execution.show.disable=disable
message.execution.show.enable=enable
message.execution.cancel=The configuration was canceled!

message.loop.prompt=loop
message.echo.prompt=echo
